import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

//春节期间小明使用微信收到很多个红包，非常开心。在查看领取红包记录时发现，某个红包金额出现的次数超过了红包总数的一半。
//请帮小明找到该红包金额。写出具体算法思路和代码实现，要求算法尽可能高效。
//给定一个红包的金额数组gifts及它的大小n，请返回所求红包的金额。
//若没有金额超过总数的一半，返回0。
public class WeiChat {

    public static int getValue(int[] gifts, int n) {
        Set<Integer> set=new HashSet<Integer>();
        for (int i=0;i<n;i++){
            set.add(gifts[i]);
        }
        int i=0;
        int[] newarr = new int[set.size()];
        Iterator iterator=set.iterator();
        while (iterator.hasNext()){
            newarr[i]=(Integer) iterator.next();
            i++;
        }

        int[] result=new int[newarr.length];
        for (int j=0;j<newarr.length;j++){
            int count=0;
            for (int k=0;k<n;k++){
                if (newarr[j]==gifts[k]){
                    count++;
                }
            }
            result[j]=count;
        }
        for (int m=0;m<result.length;m++){
            if (result[m]>=n/2){
                return newarr[m];
            }
        }
        return 0;
    }

    public static void main(String[] args) {
        int[] gifts=new int[]{1,1,2,2};
        int n=4;
        System.out.println(getValue(gifts,n));
    }
}
